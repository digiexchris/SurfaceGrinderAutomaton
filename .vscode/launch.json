{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "C++ Launch",
      "type": "cppdbg",
      "request": "launch",
      "program": "${command:cmake.launchTargetPath}",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceRoot}",
      "environment": [],
      "externalConsole": false,
      "debugServerArgs": "gdbserver -t rp2040 --frequency 5m",
      "serverLaunchTimeout": 20000,
      "filterStderr": true,
      "filterStdout": false,
      "serverStarted": "GDB\\ server\\ started",
      "preLaunchTask": "Build",
      "setupCommands": [
        {
          "text": "-file-exec-and-symbols ${command:cmake.launchTargetPath}",
          "description": "load file",
          "ignoreFailures": false
        },
        {
          "text": "-target-select remote localhost:3333",
          "description": "connect to target",
          "ignoreFailures": false
        },
        // {
        //   "text": "-interpreter-exec console \"monitor endian little\"",
        //   "ignoreFailures": false
        // },
        {
          "text": "-interpreter-exec console \"monitor reset\"",
          "ignoreFailures": false
        },
        {
          "text": "-interpreter-exec console \"monitor halt\"",
          "ignoreFailures": false
        },
        {
          "text": "-interpreter-exec console \"monitor arm semihosting enable\"",
          "ignoreFailures": false
        },
        {
          "text": "-target-download",
          "description": "flash target",
          "ignoreFailures": false
        }
      ],
      "logging": {
        "moduleLoad": true,
        "trace": true,
        "engineLogging": true,
        "programOutput": true,
        "exceptions": true
      },
      "linux": {
        "MIMode": "gdb",
        "MIDebuggerPath": "/opt/toolchains/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi/bin/arm-none-eabi-gdb",
        "debugServerPath": "pyocd"
      },
      "osx": {
        "MIMode": "gdb",
        "MIDebuggerPath": "arm-none-eabi-gdb",
        "debugServerPath": "pyocd"
      },
      "windows": {
        "preLaunchTask": "Build",
        "MIMode": "gdb",
        "MIDebuggerPath": "arm-none-eabi-gdb.exe",
        "debugServerPath": "pyocd.exe",
        "setupCommands": [
          {
            "text": "-environment-cd ${workspaceRoot}\\armgcc\\_build"
          },
          {
            "text": "-target-select remote localhost:3333",
            "description": "connect to target",
            "ignoreFailures": false
          },
          {
            "text": "-file-exec-and-symbols nrf52840_xxaa.out",
            "description": "load file",
            "ignoreFailures": false
          },
          {
            "text": "-interpreter-exec console \"monitor endian little\"",
            "ignoreFailures": false
          },
          {
            "text": "-interpreter-exec console \"monitor reset\"",
            "ignoreFailures": false
          },
          {
            "text": "-interpreter-exec console \"monitor halt\"",
            "ignoreFailures": false
          },
          {
            "text": "-interpreter-exec console \"monitor arm semihosting enable\"",
            "ignoreFailures": false
          },
          {
            "text": "-target-download",
            "description": "flash target",
            "ignoreFailures": false
          },
          {
            "text": "-interpreter-exec console \"monitor reset\"",
            "ignoreFailures": false
          },
        ]
      }
    },
    {
      "name": "Pi Pico (Native)",
      "cwd": "${workspaceRoot}",
      "executable": "${command:cmake.launchTargetPath}",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "pyocd",
      "gdbPath": "/opt/toolchains/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi/bin/arm-none-eabi-gdb",
      "liveWatch": {
        "enabled": true,
        "samplesPerSecond": 4
      },
      "serverArgs": [
        // "-s",
        // "${env:PICO_SDK_PATH}/../openocd/tcl",
        "-t",
        "rp2040",
        "--frequency",
        "5m",
      ],
      "showDevDebugOutput": "raw",
      "device": "RP2040",
      // "configFiles": [
      //   "interface/cmsis-dap.cfg",
      //   "target/rp2040.cfg"
      // ],
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      "runToEntryPoint": "main",
      "postRestartCommands": [
        "continue"
      ],
      // "loadFiles": []
    },
    {
      "name": "Pi Pico (DevContainer)",
      "cwd": "${workspaceRoot}",
      "executable": "${command:cmake.launchTargetPath}",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "openocd",
      "gdbPath": "/workspaces/gcc-arm-none/bin/arm-none-eabi-gdb",
      "liveWatch": {
        "enabled": true,
        "samplesPerSecond": 4
      },
      "searchDir": [
        "/usr/local/share/openocd/scripts"
      ],
      "debuggerArgs": [
        "set remotetimeout"
      ],
      "toolchainPrefix": "arm-none-eabi",
      "serverArgs": [
        // "-s",
        // "${env:PICO_SDK_PATH}/../openocd/tcl",
        "-c",
        "adapter speed 5000",
      ],
      "postLaunchCommands": [
        "monitor arm semihosting enable",
      ],
      "rttConfig": {
        "enabled": true,
        "address": "auto",
        "decoders": [
          {
            "label": "",
            "port": 0,
            "type": "console"
          }
        ]
      },
      "rtos": "FreeRTOS",
      "device": "RP2040",
      "configFiles": [
        "interface/cmsis-dap.cfg",
        "target/rp2040.cfg"
      ],
      "showDevDebugOutput": "raw",
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      //"runToEntryPoint": "main",
      "postRestartCommands": [
        "continue"
      ],
      "loadFiles": []
    },
    {
      "name": "BMP Attach",
      "type": "cortex-debug",
      "servertype": "bmp",
      "request": "attach",
      "cwd": "${workspaceRoot}",
      "executable": "${command:cmake.launchTargetPath}", // replace with your executable
      "interface": "swd",
      "device": "RP2040",
      "BMPGDBSerialPort": "/dev/ttyACM0", // Use whatever serial port makes sense for your OS and BMP setup
      "runToEntryPoint": "main",
      "showDevDebugOutput": "raw"
    },
    {
      "name": "BMP Debug",
      "type": "cortex-debug",
      "servertype": "bmp",
      "request": "launch",
      "cwd": "${workspaceRoot}",
      "showDevDebugOutput": "none",
      // "preLaunchCommands": [
      //   "monitor freq 900k"
      // ],
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      "armToolchainPath": "/opt/toolchains/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi/bin",
      "executable": "${command:cmake.launchTargetPath}", // replace with your executable
      // "preLaunchTask": "Build STM", // using stm32-for-vscode extension, this is the build task
      "interface": "swd",
      "device": "RP2040",
      "BMPGDBSerialPort": "/dev/ttyACM0", // Use whatever serial port makes sense for your OS and BMP setup
      //"runToEntryPoint": "main", // runToMain is deprecated.
      "loadFiles": [],
      // "postLaunchCommands": [
      //   "monitor reset",
      //   "monitor halt",
      // ],
      "postRestartCommands": [
        "break main",
        "continue"
      ]
    },
    {
      "name": "BMP Debug (Devcontainer)",
      "type": "cortex-debug",
      "servertype": "bmp",
      "request": "launch",
      "cwd": "${workspaceRoot}",
      "showDevDebugOutput": "parsed",
      // "preLaunchCommands": [
      //   "monitor freq 900k"
      // ],
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      "armToolchainPath": "/workspaces/gcc-arm-none/bin",
      "executable": "${command:cmake.launchTargetPath}", // replace with your executable
      // "preLaunchTask": "Build STM", // using stm32-for-vscode extension, this is the build task
      "interface": "swd",
      "device": "RP2040",
      "BMPGDBSerialPort": "/dev/ttyACM0", // Use whatever serial port makes sense for your OS and BMP setup
      //"runToEntryPoint": "main", // runToMain is deprecated.
      "loadFiles": [],
      // "postLaunchCommands": [
      //   "monitor reset",
      //   "monitor halt",
      // ],
      // "postRestartCommands": [
      //   "break main",
      //   "continue"
      // ]
    }
  ]
}