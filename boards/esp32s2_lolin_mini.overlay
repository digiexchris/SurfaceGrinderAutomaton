/*
 * Pins defined in esp32-arduino for the lotlin-s2-mini

 
// Default USB Settings
#define USB_VID          0x303a
#define USB_PID          0x80C2
#define USB_MANUFACTURER "WEMOS.CC"
#define USB_PRODUCT      "LOLIN-S2-MINI"
#define USB_SERIAL       "0"

// Default USB FirmwareMSC Settings
#define USB_FW_MSC_VENDOR_ID        "ESP32-S2"      //max 8 chars
#define USB_FW_MSC_PRODUCT_ID       "Firmware MSC"  //max 16 chars
#define USB_FW_MSC_PRODUCT_REVISION "1.23"          //max 4 chars
#define USB_FW_MSC_VOLUME_NAME      "S2-Firmware"   //max 11 chars
#define USB_FW_MSC_SERIAL_NUMBER    0x00000000

static const uint8_t LED_BUILTIN = 15;
#define BUILTIN_LED LED_BUILTIN  // backward compatibility
#define LED_BUILTIN LED_BUILTIN  // allow testing #ifdef LED_BUILTIN

static const uint8_t TX = 39;
static const uint8_t RX = 37;

static const uint8_t SDA = 33;
static const uint8_t SCL = 35;

static const uint8_t SS = 12;
static const uint8_t MOSI = 11;
static const uint8_t MISO = 9;
static const uint8_t SCK = 7;

static const uint8_t A0 = 1;
static const uint8_t A1 = 2;
static const uint8_t A2 = 3;
static const uint8_t A3 = 4;
static const uint8_t A4 = 5;
static const uint8_t A5 = 6;
static const uint8_t A6 = 7;
static const uint8_t A7 = 8;
static const uint8_t A8 = 9;
static const uint8_t A9 = 10;
static const uint8_t A10 = 11;
static const uint8_t A11 = 12;
static const uint8_t A12 = 13;
static const uint8_t A13 = 14;
static const uint8_t A14 = 15;
static const uint8_t A15 = 16;
static const uint8_t A16 = 17;
static const uint8_t A17 = 18;
static const uint8_t A18 = 19;
static const uint8_t A19 = 20;

static const uint8_t T1 = 1;
static const uint8_t T2 = 2;
static const uint8_t T3 = 3;
static const uint8_t T4 = 4;
static const uint8_t T5 = 5;
static const uint8_t T6 = 6;
static const uint8_t T7 = 7;
static const uint8_t T8 = 8;
static const uint8_t T9 = 9;
static const uint8_t T10 = 10;
static const uint8_t T11 = 11;
static const uint8_t T12 = 12;
static const uint8_t T13 = 13;
static const uint8_t T14 = 14;

static const uint8_t DAC1 = 17;
static const uint8_t DAC2 = 18;
 */

/ {
	aliases {
		qdec0 = &pcnt;
	};


};

&pinctrl {
	pcnt_default: pcnt_default {
		group1 {
			pinmux = <PCNT0_CH0SIG_GPIO35>,
				<PCNT0_CH0CTRL_GPIO36>;
			bias-pull-up;
		};
	};
};

&pcnt {
	pinctrl-0 = <&pcnt_default>;
	pinctrl-names = "default";
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	unit0@0 {
		reg = <0>;
		#address-cells = <1>;
		#size-cells = <0>;
		filter = <100>;
		channelA@0 {
			reg = <0>;
			sig-pos-mode = <2>;
			sig-neg-mode = <1>;
			ctrl-h-mode = <0>;
			ctrl-l-mode = <1>;
		};
	};
};


/ {
	chosen {
		zephyr,display = &st7789v0;
	};
};


/* arduino defaults for the st7789v 
ESP32S2 Arduino function
9 D8 ST7789V Reset
10 D9 ST7789V DC
11 D10 SPI SS
12 D11 SPI MOSI
13 D12 SPI MISO
14 D13 SPI SCK

OR
1 D2 DC
2 D4 Reset
16 D15 CS
19 D18 SCK
24 D23 SDA


working on esp32s2
#define TFT_CS   16  // Chip select control pin
#define TFT_DC    10  // Data Command control pin
#define TFT_RST   9  // Reset pin (could connect to RST pin)
#define TFT_MOSI 11  // Data out
#define TFT_SCLK 13  // Clock out


*/
&spi2 {
    status = "okay";
    cs-gpios = <&gpio 16 GPIO_ACTIVE_LOW>;    /* Example GPIO number for CS, originally GPIO 15 if using default */

	st7789v0:st7789v@0 { //DIN = 13  SCK = 14
		compatible = "sitronix,st7789v";
		spi-max-frequency = <500000>;
		reg = <0>;
        cmd-data-gpios = <&gpio 10 GPIO_ACTIVE_LOW>;  /* Example GPIO number for D/C, GPIO 16 in this case */
        reset-gpios = <&gpio 9 GPIO_ACTIVE_LOW>;    /* Example GPIO number for Reset, GPIO 14 in this case */
        width = <240>;
		height = <320>;
		x-offset = <0>;
		y-offset = <0>;
		vcom = <0x19>;
		gctrl = <0x35>;
		vrhs = <0x12>;
		vdvs = <0x20>;
		mdac = <0x00>;
		gamma = <0x01>;
		colmod = <0x05>;
		lcm = <0x2c>;
		porch-param = [0c 0c 00 33 33];
		cmd2en-param = [5a 69 02 01];
		pwctrl1-param = [a4 a1];
		pvgam-param = [D0 04 0D 11 13 2B 3F 54 4C 18 0D 0B 1F 23];
		nvgam-param = [D0 04 0C 11 13 2C 3F 44 51 2F 1F 1F 20 23];
		ram-param = [00 F0];
		rgb-param = [CD 08 14];
    };
};